@model EMR.ViewModels.DrugSearchModel
@using EMR.DataTables
@{
    var _model = new EMR.Business.Models.Drug();
    var _filters = new List<FilterParameter>
    {
    new FilterParameter(nameof(Model.RecordId), Model.RecordId, typeof(int))
    };
    }

    <table id="drugsTable" class="table table-sm table-striped table-bordered h-auto" style="width:100%">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(value => _model.Id)</th>
                <th>@Html.DisplayNameFor(value => _model.Name)</th>
                <th>@Html.DisplayNameFor(value => _model.Description)</th>
                <th></th>
            </tr>
        </thead>
    </table>

    <partial name="_TableScriptsAndStyles" />

    @{
        var gridModel = new DataTablesModel
        {
            StateSave = false,
            AutoWidth = true,
            Processing = true,
            ServerSide = true,
            Paging = true,
            Searching = true,
            Order = "0, 'desc'",
            LengthMenu = "22, 50, 100, 500",
            PageLength = 22,
            Name = "drugsTable",
            Url = "/Treatment/LoadDrugTable",
            Filters = _filters
        };

        gridModel.ColumnCollection.Add(new ColumnProperty(nameof(_model.Id)));
        gridModel.ColumnCollection.Add(new ColumnProperty(nameof(_model.Name)));
        gridModel.ColumnCollection.Add(new ColumnProperty(nameof(_model.Description)));
        string buttons = " <a href=\"/Records/Details?id =' + row.id + ' \" class=\"btn btn-light btn btn-sm py-0\" style=\"font-size: 1em;\"><i class=\"far fa-eye\"></i></a>" +
        " <a href=\"/Records/AddOrEdit?id =' + row.id + ' \" class=\"btn btn-light btn btn-sm py-0\" style=\"font-size: 1em;\"><i class=\"fa fa-edit\"></i></a>" +
        " <a href=\"/Records/Delete?id =' + row.id + ' \" class=\"btn btn-light btn btn-sm py-0\" style=\"font-size: 1em;\"><i class=\"fa fa-trash\"></i></a>";

        gridModel.ColumnCollection.Add(new ColumnProperty(nameof(_model.Id))
        {
            Render = new RenderRandom(buttons)
        }
        );

    }
    @await Html.PartialAsync("Table", gridModel)
