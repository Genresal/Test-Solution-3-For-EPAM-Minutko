@model DrugSearchModel
@using EMR.DataTables
@{
    var _model = new DrugViewModel();
    var _filters = new List<FilterParameter>
{
    new FilterParameter(nameof(Model.RecordId), Model.RecordId, typeof(int))
    };
}

<table id="drugsTable" class="table table-sm table-striped table-bordered h-auto" style="width:100%">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(value => _model.Id)</th>
            <th>@Html.DisplayNameFor(value => _model.Name)</th>
            <th>@Html.DisplayNameFor(value => _model.Description)</th>

            @if (Model.isUserAllowedToEdit)
            {
                <th></th>
            }

        </tr>
    </thead>
</table>

<partial name="_TableScriptsAndStyles" />

@{
    var gridModel = new DataTablesModel
    {
        StateSave = true,
        AutoWidth = true,
        Processing = true,
        ServerSide = true,
        Paging = true,
        Searching = true,
        Order = "0, 'desc'",
        LengthMenu = "22, 50, 100, 500",
        PageLength = 22,
        Name = "drugsTable",
        Url = "/Drugs/LoadTable",
        Filters = _filters
    };

    gridModel.ColumnCollection.Add(new ColumnProperty(nameof(_model.Id))
    {
        Visible = false
    });
    gridModel.ColumnCollection.Add(new ColumnProperty(nameof(_model.Name)));
    gridModel.ColumnCollection.Add(new ColumnProperty(nameof(_model.Description)));

    @if (Model.isUserAllowedToEdit)
        {
            string buttons = $" <a href=\"/Drugs/AddOrEdit?id=' + row.id + '&recordId={@Model.RecordId} \" class=\"btn btn-light btn btn-sm py-0\" style=\"font-size: 1em;\"><i class=\"fa fa-edit\"></i></a>" +
            $" <a href=\"/Drugs/Delete?id=' + row.id + '&recordId={@Model.RecordId} \" class=\"btn btn-light btn btn-sm py-0\" style=\"font-size: 1em;\"><i class=\"fa fa-trash\"></i></a>";

            gridModel.ColumnCollection.Add(new ColumnProperty(nameof(_model.Id))
            {
                Orderable = false,
                Render = new RenderRandom(buttons)
            }
            );
        }

    }
    @await Html.PartialAsync("Table", gridModel)
