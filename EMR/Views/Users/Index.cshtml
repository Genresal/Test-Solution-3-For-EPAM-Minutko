@model UserSearchModel
@using EMR.DataTables
@{
    ViewData["Title"] = "Users";

    var _model = new UserViewModel();
    var _filters = new List<FilterParameter>
{
        new FilterParameter(nameof(Model.FullName), Html.DisplayNameFor(value => Model.FullName)),
        new FilterParameter(nameof(Model.Roles), Model.Roles, Html.DisplayNameFor(value => Model.Roles))
                                };
}

<h3>@ViewData["Title"]</h3>

<div class="row">
    <div class="col-md-2 border-right">
        @await Html.PartialAsync("_Filters", _filters)

        <form method="post" action="~/Users">
            <div class="form-group">
                <input type="submit" value="Reset Filters" class="btn btn-secondary btn btn-block" />
            </div>
        </form>
    </div>

    <div class="col-md-10">
        <table id="usersTable" class="table table-sm table-striped table-bordered h-auto" style="width:100%">
            <thead>
                <tr>
                    <th>@Html.DisplayNameFor(value => _model.Id)</th>
                    <th>@Html.DisplayNameFor(value => _model.Role)</th>
                    <th>@Html.DisplayNameFor(value => _model.FullName)</th>
                    <th>@Html.DisplayNameFor(value => _model.Birthday)</th>
                    <th>@Html.DisplayNameFor(value => _model.PhoneNumber)</th>
                    <th>@Html.DisplayNameFor(value => _model.Email)</th>
                    <th></th>
                </tr>
            </thead>
        </table>
    </div>
</div>

<partial name="_TableScriptsAndStyles" />

@{
    var gridModel = new DataTablesModel
    {
        StateSave = true,
        AutoWidth = true,
        Processing = true,
        ServerSide = true,
        Paging = true,
        Searching = true,
        Order = "0, 'desc'",
        LengthMenu = "12, 24, 100, 500",
        PageLength = 12,
        Name = "usersTable",
        Url = "/Users/LoadTable",
        Filters = _filters
    };

    gridModel.ColumnCollection.Add(new ColumnProperty(nameof(_model.Id)));
    gridModel.ColumnCollection.Add(new ColumnProperty(nameof(_model.Role)));
    gridModel.ColumnCollection.Add(new ColumnProperty(nameof(_model.FullName)));
    gridModel.ColumnCollection.Add(new ColumnProperty(nameof(_model.Birthday))
    {
        Render = new RenderDate()
    }
    );
    gridModel.ColumnCollection.Add(new ColumnProperty(nameof(_model.PhoneNumber)));
    gridModel.ColumnCollection.Add(new ColumnProperty(nameof(_model.Email)));
    string button = " <a href =\"/Users/Details?id=' + row.id + '\" class=\"btn btn-light btn btn-sm py-0\" style=\"font-size: 1em;\"><i class=\"far fa-eye\"></i></a>" +
    " <a href=\"/Users/Update?id=' + row.id + '\" class=\"btn btn-light btn btn-sm py-0\" style=\"font-size: 1em;\"><i class=\"fa fa-edit\"></i></a>" +
    " <a href=\"/Users/Delete?id=' + row.id + '\" class=\"btn btn-light btn btn-sm py-0\" style=\"font-size: 1em;\"><i class=\"fa fa-trash\"></i></a>";

    gridModel.ColumnCollection.Add(new ColumnProperty(nameof(_model.Id))
    {
        Orderable = false,
        Render = new RenderRandom(button)
    }
);

}
@await Html.PartialAsync("Table", gridModel)